(defun prompt-read (prompt)
    (format *query-io* "~a: " prompt)
    (force-output *query-io*)
    (read-line *query-io*))

(defun numbrix ()
    (print "hello, welcome to Numbrix.")
    (setf input (prompt-read "Please enter in the file you would like to load. "))
    (setf board (read-file input))
    (print "set board")
    (print board)
    )

(defun read-file (file_name)
    * (with-open-file (stream file_name)
        (setf dim (parse-integer (read-line stream nil)))
        (setf board (make-array (list dim dim)))
        (do ((line (read-line stream nil)
                   (read-line stream nil)))
            
            ((null line))
            (setf row (parse-integer (subseq line 0 1)))
            (setf col (parse-integer (subseq line 2 3)))
            (setf elmt (parse-integer (subseq line 4)))
            (setf row (- row 1))
            (setf col (- col 1))
            (setf (aref board row col) elmt)
        )
        (return-from read-file board)))

(defun print-board (board)
    (loop for i below (array-total-size board) do
        (if (zerop (mod i (array-dimension board 0)))
            (terpri)
            (princ #\Space))
        (setf elmt (row-major-aref board i))
        (if (null elmt)
            (progn
                (princ #\Space)
                (princ #\Space)
            )
            (progn
                (if (> 10 elmt)
                    (progn
                        (princ #\Space)
                        (princ elmt)
                    )
                (princ elmt)
                )
            )
        )
    ))
